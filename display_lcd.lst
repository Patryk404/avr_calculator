gavrasm Gerd's AVR assembler version 5.1 (C)2021 by DG4FAC
----------------------------------------------------------

Path:        C:\Users\Patryk\Documents\avr_sim\projects\display_lcd\
Source file: display_lcd.asm
Hex file:    display_lcd.hex
Eeprom file: display_lcd.eep
Compiled:    25.07.2022, 17:49:00
Pass:        2

     1: ;
     2: ; ***********************************
     3: ; * (Add program task here)         *
     4: ; * (Add AVR type and version here) *
     5: ; * (C)2021 by Gerhard Schmidt      *
     6: ; ***********************************
     7: ;
     8: .nolist
    11: ;
    12: ; **********************************
    13: ;        H A R D W A R E
    14: ; **********************************
    15: ;
    16: ; (F2 adds ASCII pin-out for device here)
    17: ;
    18: ; **********************************
    19: ;  P O R T S   A N D   P I N S
    20: ; **********************************
    21: ;
    22: ; (Add symbols for all ports and port pins with ".equ" here)
    23: ; (e.g. .equ pDirD = DDRB ; Define a direction port
    24: ;  or
    25: ;  .equ bMyPinO = PORTB0 ; Define an output pin)
    26: ;
    27: ; **********************************
    28: ;   A D J U S T A B L E   C O N S T
    29: ; **********************************
    30: ;
    31: ; (Add all user adjustable constants here, e.g.)
    32: ; .equ clock=1000000 ; Define the clock frequency
    33: ;
    34: .equ fclk=16000000
    35: ; **********************************
    36: ;  F I X  &  D E R I V.  C O N S T
    37: ; **********************************
    38: ;
    39: ; (Add symbols for fixed and derived constants here)
    40: ;
    41: ; **********************************
    42: ;       R E G I S T E R S
    43: ; **********************************
    44: ;
    45: ; free: R0 to R14
    46: .def rSreg = R15 ; Save/Restore status port
    47: .def temp = R16 ; Define multipurpose register
    48: ; free: R17 to R29
    49: ; free: R31:R30 = Z
    50: ;
    51: ; **********************************
    52: ;           S R A M
    53: ; **********************************
    54: ;
    55: .dseg
    56: .org SRAM_START
    57: ; (Add labels for SRAM locations here, e.g.
    58: ; sLabel1:
    59: ;   .byte 16 ; Reserve 16 bytes)
    60: ;
    61: ; **********************************
    62: ;         C O D E
    63: ; **********************************
    64: ;
    65: .cseg
    66: .org 000000
    67: ;
    68: ; **********************************
    69: ; R E S E T  &  I N T - V E C T O R S
    70: ; **********************************
    71: 000000   C019  rjmp Main ; Reset vector
    72: 000001   9518  reti ; INT0
    73: 000002   9518  reti ; INT1
    74: 000003   9518  reti ; PCI0
    75: 000004   9518  reti ; PCI1
    76: 000005   9518  reti ; PCI2
    77: 000006   9518  reti ; WDT
    78: 000007   9518  reti ; OC2A
    79: 000008   9518  reti ; OC2B
    80: 000009   9518  reti ; OVF2
    81: 00000A   9518  reti ; ICP1
    82: 00000B   9518  reti ; OC1A
    83: 00000C   9518  reti ; OC1B
    84: 00000D   9518  reti ; OVF1
    85: 00000E   9518  reti ; OC0A
    86: 00000F   9518  reti ; OC0B
    87: 000010   9518  reti ; OVF0
    88: 000011   9518  reti ; SPI
    89: 000012   9518  reti ; URXC
    90: 000013   9518  reti ; UDRE
    91: 000014   9518  reti ; UTXC
    92: 000015   9518  reti ; ADCC
    93: 000016   9518  reti ; ERDY
    94: 000017   9518  reti ; ACI
    95: 000018   9518  reti ; TWI
    96: 000019   9518  reti ; SPMR
    97: ;
    98: ; **********************************
    99: ;  I N T - S E R V I C E   R O U T .
   100: ; **********************************
   101: ;
   102: ; (Add all interrupt service routines here)
   103: ;
   104: ; **********************************
   105: ;  M A I N   P R O G R A M   I N I T
   106: ; **********************************
   107: ;
   108: 
   109: Main:
   110: Start:            ; stack initialization
   111: 00001A   EF0F  ldi temp,low(RAMEND)
   112: 00001B   BF0D  out SPL,temp
   113: 00001C   E004  ldi temp,high(RAMEND)
   114: 00001D   BF0E  out SPH,temp
   115:                  ;;;;;;;;;;;;;;;;;;;;;;;;;
   116:                  ; initialization of pd0->pd7 (DATA BUS) to output mode
   117:                  ; initialization of pb0->pb1 (R/W AND ENABLE PIN) to output mode
   118: 00001E   9A20  SBI DDRB,DDB0
   119: 00001F   9A21  SBI DDRB,DDB1
   120: 000020   EF0F  SER R16
   121: 000021   B90A  OUT DDRD,R16
   122:                  ;;;;;;;;;;;;;;;;;;;;;;;;;
   123:                  ;;;;;
   124: Initialization_LCD_HARDWARE:
   125: 000022   EC08  ldi temp,200
   126: 000023   D08D  rcall delayTx1mS
   127: 
   128:       ; first part of reset sequence
   129: 
   130: 000024   E300  ldi temp,0b00110000  ; reset LCD
   131: 000025   B90B  out PORTD,temp
   132: 000026   D088  rcall clear_enable
   133: 000027   D082  rcall enable_lol
   134: 000028   E00A  ldi temp,10
   135: 000029   D087  rcall delayTx1mS
   136: 
   137:       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   138: 
   139:       ; second part of reset sequence
   140: 00002A   E300  ldi temp,0b00110000
   141: 00002B   B90B  out PORTD,temp
   142: 00002C   D082  rcall clear_enable
   143: 00002D   D07C  rcall enable_lol
   144: 00002E   EC08  ldi temp,200
   145: 00002F   D08E  rcall delayTx1uS
   146: 
   147:       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   148: 
   149:       ; Third part of reset sequence
   150: 000030   E300  ldi temp,0b00110000
   151: 000031   B90B  out PORTD,temp
   152: 000032   D07C  rcall clear_enable
   153: 000033   D076  rcall enable_lol
   154: 000034   EC08  ldi temp,200
   155: 000035   D088  rcall delayTx1uS
   156:       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   157: 
   158: 
   159:       ; set mode lines and font
   160: 000036   E308  ldi temp,0b00111000
   161: 000037   B90B  out PORTD,temp
   162: 000038   D076  rcall clear_enable
   163: 000039   D070  rcall enable_lol
   164: 00003A   E500  ldi temp,80
   165: 00003B   D082  rcall delayTx1uS
   166:       ;;;;;;;;;;;;;;;;;;;;;;;;;
   167: 
   168:       ; Display On/Off Control instruction
   169: 00003C   E008  ldi temp,0b00001000        ;; DISPLAY OFF
   170: 00003D   B90B  out PORTD,temp
   171: 00003E   D070  rcall clear_enable
   172: 00003F   D06A  rcall enable_lol
   173: 000040   E500  ldi temp,80
   174: 000041   D07C  rcall delayTx1uS
   175: 
   176: 
   177: 000042   E001  ldi temp,0b00000001 ; clear display instruction
   178: 000043   B90B  out PORTD,temp
   179: 000044   D06A  rcall clear_enable
   180: 000045   D064  rcall enable_lol
   181: 000046   E004  ldi temp,4
   182: 000047   D069  rcall delayTx1mS
   183: 
   184: 
   185: 000048   E006  ldi temp,0b00000110     ; entry mode
   186: 000049   B90B  out PORTD,temp
   187: 00004A   D064  rcall clear_enable
   188: 00004B   D05E  rcall enable_lol
   189: 00004C   E500  ldi temp,80
   190: 00004D   D070  rcall delayTx1uS
   191: 
   192: 00004E   E00F  ldi temp,0b00001111 ; turn display on enable cursor and blink ;)
   193: 00004F   B90B  out PORTD,temp
   194: 000050   D05E  rcall clear_enable
   195: 000051   D058  rcall enable_lol
   196: 000052   E500  ldi temp,80
   197: 000053   D06A  rcall delayTx1uS
   198:       ;;;;;;;;;;;;;;;;;;;;;;;;;;;
   199: 
   200:       ;;;;;;;;;;;;;;;;;;;;;;;;;;; WRITING SCREEN!
   201: 
   202: 000054   E800  ldi temp,0b10000000 ; SET POSITION OF CURSOR
   203: 000055   B90B  out PORTD,temp
   204: 000056   D058  rcall clear_enable
   205: 000057   D052  rcall enable_lol
   206: 000058   E500  ldi temp,80
   207: 000059   D064  rcall delayTx1uS
   208: 
   209: 00005A   E500  ldi temp,0b01010000 ; "P"
   210: 00005B   B90B  out PORTD,temp
   211: 00005C   9A28  sbi PORTB,PORTB0
   212: 00005D   9A29  sbi PORTB,PORTB1
   213: 00005E   D063  rcall delay1uS
   214: 00005F   9829  cbi PORTB,PORTB1
   215: 000060   D061  rcall delay1uS
   216: 
   217: 000061   E604  ldi temp,100
   218: 000062   D04E  rcall delayTx1mS
   219: 
   220: 000063   E401  ldi temp,0b01000001 ; "A"
   221: 000064   B90B  out PORTD,temp
   222: 000065   9A28  sbi PORTB,PORTB0
   223: 000066   9A29  sbi PORTB,PORTB1
   224: 000067   D05A  rcall delay1uS
   225: 000068   9829  cbi PORTB,PORTB1
   226: 000069   D058  rcall delay1uS
   227: 
   228: 00006A   E604  ldi temp,100
   229: 00006B   D045  rcall delayTx1mS
   230: 
   231: 00006C   E504  ldi temp,0b01010100 ; "T"
   232: 00006D   B90B  out PORTD,temp
   233: 00006E   9A28  sbi PORTB,PORTB0
   234: 00006F   9A29  sbi PORTB,PORTB1
   235: 000070   D051  rcall delay1uS
   236: 000071   9829  cbi PORTB,PORTB1
   237: 000072   D04F  rcall delay1uS
   238: 
   239: 000073   E604  ldi temp,100
   240: 000074   D03C  rcall delayTx1mS
   241: 
   242: 000075   E502  ldi temp,0b01010010 ; "R"
   243: 000076   B90B  out PORTD,temp
   244: 000077   9A28  sbi PORTB,PORTB0
   245: 000078   9A29  sbi PORTB,PORTB1
   246: 000079   D048  rcall delay1uS
   247: 00007A   9829  cbi PORTB,PORTB1
   248: 00007B   D046  rcall delay1uS
   249: 
   250: 00007C   E604  ldi temp,100
   251: 00007D   D033  rcall delayTx1mS
   252: 
   253: 00007E   E509  ldi temp,0b01011001 ; "Y"
   254: 00007F   B90B  out PORTD,temp
   255: 000080   9A28  sbi PORTB,PORTB0
   256: 000081   9A29  sbi PORTB,PORTB1
   257: 000082   D03F  rcall delay1uS
   258: 000083   9829  cbi PORTB,PORTB1
   259: 000084   D03D  rcall delay1uS
   260: 
   261: 000085   E604  ldi temp,100
   262: 000086   D02A  rcall delayTx1mS
   263: 
   264: 000087   E40B  ldi temp,0b01001011 ; "K"
   265: 000088   B90B  out PORTD,temp
   266: 000089   9A28  sbi PORTB,PORTB0
   267: 00008A   9A29  sbi PORTB,PORTB1
   268: 00008B   D036  rcall delay1uS
   269: 00008C   9829  cbi PORTB,PORTB1
   270: 00008D   D034  rcall delay1uS
   271: 
   272: 00008E   E604  ldi temp,100
   273: 00008F   D021  rcall delayTx1mS
   274: 
   275: 000090   E304  ldi temp,0b00110100 ; "4"
   276: 000091   B90B  out PORTD,temp
   277: 000092   9A28  sbi PORTB,PORTB0
   278: 000093   9A29  sbi PORTB,PORTB1
   279: 000094   D02D  rcall delay1uS
   280: 000095   9829  cbi PORTB,PORTB1
   281: 000096   D02B  rcall delay1uS
   282: 
   283: 000097   E604  ldi temp,100
   284: 000098   D018  rcall delayTx1mS
   285: 
   286: 000099   E300  ldi temp,0b00110000 ; "0"
   287: 00009A   B90B  out PORTD,temp
   288: 00009B   9A28  sbi PORTB,PORTB0
   289: 00009C   9A29  sbi PORTB,PORTB1
   290: 00009D   D024  rcall delay1uS
   291: 00009E   9829  cbi PORTB,PORTB1
   292: 00009F   D022  rcall delay1uS
   293: 
   294: 0000A0   E604  ldi temp,100
   295: 0000A1   D00F  rcall delayTx1mS
   296: 
   297: 0000A2   E304  ldi temp,0b00110100 ; "4"
   298: 0000A3   B90B  out PORTD,temp
   299: 0000A4   9A28  sbi PORTB,PORTB0
   300: 0000A5   9A29  sbi PORTB,PORTB1
   301: 0000A6   D01B  rcall delay1uS
   302: 0000A7   9829  cbi PORTB,PORTB1
   303: 0000A8   D019  rcall delay1uS
   304: 
   305: ;
   306: ; **********************************
   307: ;    P R O G R A M   L O O P
   308: ; **********************************
   309: ;
   310: Loop:
   311: 0000A9   CFFF  rjmp loop
   312: 
   313: enable_lol:
   314: 0000AA   9A29  sbi PORTB,PORTB1
   315: 0000AB   D016  rcall delay1uS
   316: 0000AC   9A28  sbi PORTB,PORTB0
   317: 0000AD   D014  rcall delay1uS
   318: 0000AE   9508  ret
   319: clear_enable:
   320: 0000AF   9828  cbi PORTB,PORTB0
   321: 0000B0   9829  cbi PORTB,PORTB1
   322: ;
   323: ; End of source code
   324: ;
   325: ; (Add Copyright information here, e.g.
   326: ; .db "(C)2021 by Gerhard Schmidt  " ; Source code readable
   327: ; .db "C(2)20 1ybG reahdrS hcimtd  " ; Machine code format
   328: ;
   329: 
   330: delayTx1mS:
   331: 0000B1   D003  rcall delay1mS
   332: 0000B2   950A  dec R16
   333: 0000B3   F7E9  brne delayTx1mS
   334: 0000B4   9508  ret
   335: 
   336: delay1mS:
   337: 0000B5   93CF  push YL
   338: 0000B6   93DF  push YH
   339: 0000B7   E9CB  ldi YL,low(((fclk/1000)-18)/4)
   340: 0000B8   E0DF  ldi YH,high(((fclk/1000)-18)/4)
   341: delay1mS_01:
   342: 0000B9   9721  sbiw YH:YL,1
   343: 0000BA   F7F1  brne delay1mS_01
   344: 0000BB   91DF  pop YH
   345: 0000BC   91CF  pop YL
   346: 0000BD   9508  ret
   347: 
   348: delayTx1uS:
   349: 0000BE   D003  rcall delay1uS
   350: 0000BF   950A  dec R16
   351: 0000C0   F7E9  brne delayTx1uS
   352: 0000C1   9508  ret
   353: 
   354: delay1uS:
   355: 0000C2   930F  push    R16                           ; [2] these instructions do nothing except consume clock cycles
   356: 0000C3   910F  pop     R16                            ; [2]
   357: 0000C4   930F  push    R16                            ; [2]
   358: 0000C5   910F  pop     R16                            ; [2]
   359: 0000C6   9508  ret                                     ; [4]
   360: 

List of symbols:
Type nDef nUsed             Decimalval           Hexval Name
  T     1     1                    132               84 ATMEGA88PA
  L     1     2                     26               1A MAIN
  L     1     0                     26               1A START
  L     1     0                     34               22 INITIALIZATION_LCD_HARDWARE
  L     1     2                    169               A9 LOOP
  L     1    18                    170               AA ENABLE_LOL
  L     1    18                    175               AF CLEAR_ENABLE
  L     1    24                    177               B1 DELAYTX1MS
  L     1     2                    181               B5 DELAY1MS
  L     1     2                    185               B9 DELAY1MS_01
  L     1    16                    190               BE DELAYTX1US
  L     1    42                    194               C2 DELAY1US
  R     1     0                     15               0F RSREG
  R     1    58                     16               10 TEMP
  C     1     0                     22               16 NOW_Y
  C     1     0                      7               07 NOW_M
  C     1     0                     25               19 NOW_D
  C     1     0                  44767             AEDF NOW_I
  C     1     2               16000000           F42400 FCLK
   No macros.

Program             :      199 words.
Constants           :        0 words.
Total program memory:      199 words.
Eeprom space        :        0 bytes.
Data segment        :        0 bytes.
Compilation completed, no errors.
Compilation ended 25.07.2022, 17:49:00
