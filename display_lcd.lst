gavrasm Gerd's AVR assembler version 5.1 (C)2021 by DG4FAC
----------------------------------------------------------

Path:        C:\Users\Patryk\Documents\avr_sim\projects\display_lcd\
Source file: display_lcd.asm
Hex file:    display_lcd.hex
Eeprom file: display_lcd.eep
Compiled:    24.07.2022, 21:01:08
Pass:        2

     1: ;
     2: ; ***********************************
     3: ; * (Add program task here)         *
     4: ; * (Add AVR type and version here) *
     5: ; * (C)2021 by Gerhard Schmidt      *
     6: ; ***********************************
     7: ;
     8: .nolist
    11: ;
    12: ; **********************************
    13: ;        H A R D W A R E
    14: ; **********************************
    15: ;
    16: ; (F2 adds ASCII pin-out for device here)
    17: ;
    18: ; **********************************
    19: ;  P O R T S   A N D   P I N S
    20: ; **********************************
    21: ;
    22: ; (Add symbols for all ports and port pins with ".equ" here)
    23: ; (e.g. .equ pDirD = DDRB ; Define a direction port
    24: ;  or
    25: ;  .equ bMyPinO = PORTB0 ; Define an output pin)
    26: ;
    27: ; **********************************
    28: ;   A D J U S T A B L E   C O N S T
    29: ; **********************************
    30: ;
    31: ; (Add all user adjustable constants here, e.g.)
    32: ; .equ clock=1000000 ; Define the clock frequency
    33: ;
    34: .equ fclk=16000000
    35: ; **********************************
    36: ;  F I X  &  D E R I V.  C O N S T
    37: ; **********************************
    38: ;
    39: ; (Add symbols for fixed and derived constants here)
    40: ;
    41: ; **********************************
    42: ;       R E G I S T E R S
    43: ; **********************************
    44: ;
    45: ; free: R0 to R14
    46: .def rSreg = R15 ; Save/Restore status port
    47: .def rmp = R16 ; Define multipurpose register
    48: ; free: R17 to R29
    49: ; free: R31:R30 = Z
    50: ;
    51: ; **********************************
    52: ;           S R A M
    53: ; **********************************
    54: ;
    55: .dseg
    56: .org SRAM_START
    57: ; (Add labels for SRAM locations here, e.g.
    58: ; sLabel1:
    59: ;   .byte 16 ; Reserve 16 bytes)
    60: ;
    61: ; **********************************
    62: ;         C O D E
    63: ; **********************************
    64: ;
    65: .cseg
    66: .org 000000
    67: ;
    68: ; **********************************
    69: ; R E S E T  &  I N T - V E C T O R S
    70: ; **********************************
    71: 000000   C019  rjmp Main ; Reset vector
    72: 000001   9518  reti ; INT0
    73: 000002   9518  reti ; INT1
    74: 000003   9518  reti ; PCI0
    75: 000004   9518  reti ; PCI1
    76: 000005   9518  reti ; PCI2
    77: 000006   9518  reti ; WDT
    78: 000007   9518  reti ; OC2A
    79: 000008   9518  reti ; OC2B
    80: 000009   9518  reti ; OVF2
    81: 00000A   9518  reti ; ICP1
    82: 00000B   9518  reti ; OC1A
    83: 00000C   9518  reti ; OC1B
    84: 00000D   9518  reti ; OVF1
    85: 00000E   9518  reti ; OC0A
    86: 00000F   9518  reti ; OC0B
    87: 000010   9518  reti ; OVF0
    88: 000011   9518  reti ; SPI
    89: 000012   9518  reti ; URXC
    90: 000013   9518  reti ; UDRE
    91: 000014   9518  reti ; UTXC
    92: 000015   9518  reti ; ADCC
    93: 000016   9518  reti ; ERDY
    94: 000017   9518  reti ; ACI
    95: 000018   9518  reti ; TWI
    96: 000019   9518  reti ; SPMR
    97: ;
    98: ; **********************************
    99: ;  I N T - S E R V I C E   R O U T .
   100: ; **********************************
   101: ;
   102: ; (Add all interrupt service routines here)
   103: ;
   104: ; **********************************
   105: ;  M A I N   P R O G R A M   I N I T
   106: ; **********************************
   107: ;
   108: Main:
   109: ;
   110: ; **********************************
   111: ;    P R O G R A M   L O O P
   112: ; **********************************
   113: ;
   114: Loop:
   115: 00001A   CFFF  rjmp loop
   116: ;
   117: ; End of source code
   118: ;
   119: ; (Add Copyright information here, e.g.
   120: ; .db "(C)2021 by Gerhard Schmidt  " ; Source code readable
   121: ; .db "C(2)20 1ybG reahdrS hcimtd  " ; Machine code format
   122: ;
   123: 
   124: delayTx1mS:
   125: 00001B   D003  rcall delay1mS
   126: 00001C   950A  dec R16
   127: 00001D   F7E9  brne delayTx1mS
   128: 00001E   9508  ret
   129: 
   130: delay1mS:
   131: 00001F   93CF  push YL
   132: 000020   93DF  push YH
   133: 000021   E9CB  ldi YL,low(((fclk/1000)-18)/4)
   134: 000022   E0DF  ldi YH,high(((fclk/1000)-18)/4)
   135: delay1mS_01:
   136: 000023   9721  sbiw YH:YL,1
   137: 000024   F7F1  brne delay1mS_01
   138: 000025   91DF  pop YH
   139: 000026   91CF  pop YL
   140: 000027   9508  ret
   141: 
   142: delayTx1uS:
   143: 000028   D003  rcall delay1uS
   144: 000029   950A  dec R16
   145: 00002A   F7E9  brne delayTx1uS
   146: 00002B   9508  ret
   147: 
   148: delay1uS:
   149: 00002C   930F  push    R16                           ; [2] these instructions do nothing except consume clock cycles
   150: 00002D   910F  pop     R16                            ; [2]
   151: 00002E   930F  push    R16                            ; [2]
   152: 00002F   910F  pop     R16                            ; [2]
   153: 000030   9508  ret                                     ; [4]
   154: 

List of symbols:
Type nDef nUsed             Decimalval           Hexval Name
  T     1     1                    132               84 ATMEGA88PA
  L     1     2                     26               1A MAIN
  L     1     2                     26               1A LOOP
  L     1     2                     27               1B DELAYTX1MS
  L     1     2                     31               1F DELAY1MS
  L     1     2                     35               23 DELAY1MS_01
  L     1     2                     40               28 DELAYTX1US
  L     1     2                     44               2C DELAY1US
  R     1     0                     15               0F RSREG
  R     1     0                     16               10 RMP
  C     1     0                     22               16 NOW_Y
  C     1     0                      7               07 NOW_M
  C     1     0                     24               18 NOW_D
  C     1     0                  44766             AEDE NOW_I
  C     1     2               16000000           F42400 FCLK
   No macros.

Program             :       49 words.
Constants           :        0 words.
Total program memory:       49 words.
Eeprom space        :        0 bytes.
Data segment        :        0 bytes.
Compilation completed, no errors.
Compilation ended 24.07.2022, 21:01:08
